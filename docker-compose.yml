version: '3.3'

services:
  db:
    environment: &db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: CyJ111CkWOZo0X
    image: postgres:alpine
    volumes:
      - postgres:/var/lib/postgresql/data
  app:
    build: ./
    command: sh ./start_app.sh
    depends_on:
      - redis
      - db
    environment:
      <<: *db
      RAILS_ENV: production
      RAILS_SERVE_STATIC_FILES: 'true'
      RAILS_LOG_TO_STDOUT: 'true'
      REDIS_URL: redis://redis:6379
      SECRET_KEY_BASE: 99c599ce75cff5b9496287f9b23b18854b4fa08e37617653d58f299b10620d726bf6fcd956b2e04adb934e11d2a41ad078302afdc865f6c1fcd4c03e778df6d3
      VIRTUAL_HOST: 'www.surfnotify.com,surfnotify.com'
  proxy:
    image: jwilder/nginx-proxy:latest
    depends_on:
      - app
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/tmp/docker.sock
      - proxy:/etc/nginx/certs
      - proxy:/etc/nginx/vhost.d
      - proxy:/usr/share/nginx/html
  proxy_tls:
    image: jrcs/letsencrypt-nginx-proxy-companion
    depends_on:
      - proxy
    environment:
      NGINX_DOCKER_GEN_CONTAINER: proxy
      NGINX_PROXY_CONTAINER: proxy
    restart: unless-stopped
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - proxy:/etc/nginx/certs
      - proxy:/etc/nginx/vhost.d
      - proxy:/usr/share/nginx/html
  redis:
    image: redis:4.0.2-alpine
    command: redis-server
    volumes:
      - redis:/data

volumes:
  postgres:
  redis:
  proxy:
