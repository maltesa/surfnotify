= link_to 'Create Notification', new_notification_path, class: 'btn btn-outline-primary btn-lg pull-right'
%h1 Your Notifications
%hr
.card-columns
  - @notifications.each do |notification|
    - matching_fc = notification.matching_forecasts
    - next_match = matching_fc.first
    .card{ class: matching_fc.any? ? 'border-success' : '' }
      .card-header{ class: matching_fc.any? ? 'text-success' : '' }
        .row
          .col-sm-10
            %i.fa.fa-circle
            = notification.forecast.spot_name
          .col-sm-2
            = link_to edit_notification_path(notification), class: 'pull-right' do
              %i.fa.fa-pencil
      .card-body
        - if notification.forecast.forecast.none?
          %span.font-italic Waiting for forecast data ...
        - else
          - notification.activated_rules_with_params.each do |rule|
            %span.strong
              = "#{rule[:name]}: "
            - if next_match.present?
              - value = next_match.second[rule[:key].to_s]
              - if value.is_a?(Array)
                = value.join(', ')
              - elsif value.present?
                value
              - else
                %span.font-italic No data
            - else
              %i.fa.fa-frown-o
            %br
      .card-footer
        %small
          = link_to 'show forecast', notification.spot, class: 'pull-right'
          - if next_match.present?
            %strong Next match:
            = l DateTime.strptime(next_match[0], '%s')
          - else
            No match
    %br
