image: docker:latest

services:
  - docker:dind

stages:
  - build
  # - test
  - release
  # - deploy

variables:
  DOCKER_DRIVER: overlay2
  CONTAINER_IMAGE_NAME: surfnotify
  CONTAINER_TEST_IMAGE: $CONTAINER_REGISTRY_DOMAIN/$CONTAINER_IMAGE_NAME:$CI_COMMIT_SHA
  CONTAINER_RELEASE_IMAGE: $CONTAINER_REGISTRY_DOMAIN/$CONTAINER_IMAGE_NAME:latest
  POSTGRES_TEST_DB: surfnotify_test
  POSTGRES_TEST_HOST: postgres
  POSTGRES_TEST_USER: postgres
  POSTGRES_TEST_PASSWORD: ""

build-image:
  stage: build
  script:
    - docker login -u $DOCKER_REG_USER -p $DOCKER_REG_PW $CONTAINER_REGISTRY_DOMAIN
    - docker build -f ./docker/Dockerfile --build-arg SECRET_KEY_BASE=${SECRET_KEY_BASE} --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

# FIXME: image cant be pulled from registry
# test-image:
#   stage: test
#   image: $CONTAINER_TEST_IMAGE
#   services:
#     - postgres:latest
#   variables:
#     RAILS_ENV: 'test'
#   script:
#     - rails db:create db:schema:load
#     - rails test

release-image:
  stage: release
  script:
    - docker login -u reg -p $DOCKER_REG_PW $CONTAINER_REGISTRY_DOMAIN
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_RELEASE_IMAGE
    - docker push $CONTAINER_RELEASE_IMAGE
  only:
    - master

# deploy-image:
#   stage: deploy
#   dependencies:
#     - build-image
#     - test-image
#     - release-image
#   only:
#     - master